#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define BEHAVIOR_MODMORPH_TWO(name, a, b) \
	name: name { \
		compatible = "zmk,behavior-mod-morph"; \
		label = #name; \
		#binding-cells = <0>; \
		bindings = <a>, <b>; \
		mods = <(MOD_LSFT|MOD_RSFT)>; \
	}

&mt {
	flavor = "tap-preferred";
};

&lt {
	retro-tap;
};

/ {
	behaviors {
		BEHAVIOR_MODMORPH_TWO(amps_prcnt, &kp AMPS, &kp PRCNT);
		BEHAVIOR_MODMORPH_TWO(plus_n1, &kp PLUS, &kp N1);
		BEHAVIOR_MODMORPH_TWO(lbkt_n2, &kp LBKT, &kp N2);
		BEHAVIOR_MODMORPH_TWO(lbrc_n3, &kp LBRC, &kp N3);
		BEHAVIOR_MODMORPH_TWO(lpar_n4, &kp LPAR, &kp N4);
		BEHAVIOR_MODMORPH_TWO(equal_n5, &kp EQUAL, &kp N5);

		BEHAVIOR_MODMORPH_TWO(multiply_n6, &kp KP_MULTIPLY, &kp N6);
		BEHAVIOR_MODMORPH_TWO(rpar_n7, &kp RPAR, &kp N7);
		BEHAVIOR_MODMORPH_TWO(rbrc_n8, &kp RBRC, &kp N8);
		BEHAVIOR_MODMORPH_TWO(rbkt_n9, &kp RBKT, &kp N9);
		BEHAVIOR_MODMORPH_TWO(excl_n0, &kp EXCL, &kp N0);
		BEHAVIOR_MODMORPH_TWO(minus_under, &kp MINUS, &kp UNDER);

		BEHAVIOR_MODMORPH_TWO(at_caret, &kp AT, &kp CARET);
		BEHAVIOR_MODMORPH_TWO(hash_grave, &kp HASH, &kp GRAVE);
		BEHAVIOR_MODMORPH_TWO(dollar_tilde, &kp DOLLAR, &kp TILDE);
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&amps_prcnt &plus_n1 &lbkt_n2 &lbrc_n3 &lpar_n4 &equal_n5 &tog 1
&mo 3 &multiply_n6 &rpar_n7 &rbrc_n8 &rbkt_n9 &excl_n0 &minus_under

&kp TAB &kp SEMI &kp COMMA &kp DOT &kp P &kp Y &none
&none &kp F &kp G &kp C &kp R &kp L &kp DEL

&kp ESC &mt LGUI A &mt LALT O &mt LCTRL E &mt LSHFT U &kp I &none &none &kp INSERT
&kp K_CMENU &none &none &kp D &mt RSHFT H &mt RCTRL T &mt RALT N &mt RGUI S &kp BSPC

&kp CAPS &kp SQT &kp Q &kp J &kp K &kp X &kp HOME
&kp PG_UP &kp B &kp M &kp W &kp V &kp Z &at_caret

&mo 2 &hash_grave &dollar_tilde &kp LEFT &kp RIGHT &kp ENTER &kp ENTER &kp END
&kp PG_DN &kp SPACE &kp SPACE &kp UP &kp DOWN &kp FSLH &kp BSLH &mo 2
			>;
		};

		keypad {
			bindings = <
&kp EQUAL &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &trans
&mo 3 &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS

&kp TAB &kp Q &kp W &kp E &kp R &kp T &none
&none &kp Y &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS &kp BSLH

&kp ESC &kp A &kp S &kp D &kp F &kp G &none &kp LCTRL &kp LALT
&kp LGUI &kp RCTRL &none &kp H &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS &kp SQT

&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp HOME
&kp PG_UP &kp N &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_ENTER &kp RSHFT

&mo 2 &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT &kp BSPC &kp DEL &kp END
&kp PG_DN &kp ENTER &kp KP_N0 &kp UP &kp DOWN &kp KP_DOT &kp RBKT &mo 2
			>;
		};

		fn {
			bindings = <
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &trans
&trans &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12

&trans &trans &trans &trans &trans &trans &none
&none &trans &trans &trans &trans &trans &trans

&trans &trans &trans &trans &trans &trans &none &trans &trans
&trans &trans &none &trans &trans &trans &trans &trans &trans

&trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans

&trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &trans
			>;
		};

		mod {
			bindings = <
&none &none &none &none &none &none &none
&trans &none &none &none &none &none &none

&none &none &none &none &none &none &bootloader
&bootloader &none &none &none &none &none &none

&none &none &none &none &none &none &none &none &none
&none &none &none &none &none &none &none &none &none

&none &none &none &none &none &none &none
&none &none &none &none &none &none &none

&none &none &none &none &none &none &none &none
&none &bl BL_TOG &rgb_ug RGB_TOG &bl BL_INC &bl BL_DEC &none &none &none
			>;
		};
	};
};
