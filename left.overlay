#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ZMK_HELPER_STRINGIFY(x) #x
#define OS_UNICODE_LEAD &macro_tap &kp LS(LC(U))
#define OS_UNICODE_TRAIL &macro_tap &kp SPACE
#define UC_MACRO(name, unicode_bindings) \
    / { \
        macros { \
            name: name { \
                compatible = "zmk,behavior-macro"; \
                label = ZMK_HELPER_STRINGIFY(UC_MACRO_ ## name); \
                wait-ms = <0>; \
                tap-ms = <0>; \
                #binding-cells = <0>; \
                bindings = <OS_UNICODE_LEAD>, <&macro_tap unicode_bindings>, <OS_UNICODE_TRAIL>; \
            }; \
        }; \
    };

#define UC_MODMORPH(name, uc_binding, shifted_uc_binding) \
    / { \
        behaviors { \
            name: name { \
                compatible = "zmk,behavior-mod-morph"; \
                label = ZMK_HELPER_STRINGIFY(UC_MORPH_ ## name); \
                #binding-cells = <0>; \
                bindings = <uc_binding>, <shifted_uc_binding>; \
                mods = <(MOD_LSFT|MOD_RSFT)>; \
            }; \
        }; \
    };

#define ZMK_UNICODE_SINGLE(name, L0, L1, L2, L3) \
    UC_MACRO(name ## _lower, &kp L0 &kp L1 &kp L2 &kp L3) \
    UC_MODMORPH(name, &name ## _lower, &none)

#define ZMK_UNICODE_PAIR(name, L0, L1, L2, L3, U0, U1, U2, U3) \
    UC_MACRO(name ## _lower, &kp L0 &kp L1 &kp L2 &kp L3) \
    UC_MACRO(name ## _upper, &kp U0 &kp U1 &kp U2 &kp U3) \
    UC_MODMORPH(name, &name ## _lower, &name ## _upper)

ZMK_UNICODE_PAIR(   de_ae,      N0, N0,  E, N4,    N0, N0,  C, N4)
ZMK_UNICODE_PAIR(   de_oe,      N0, N0,  F, N6,    N0, N0,  D, N6)
ZMK_UNICODE_PAIR(   de_ue,      N0, N0,  F,  C,    N0, N0,  D,  C)
ZMK_UNICODE_PAIR(de_eszett,     N0, N0,  D,  F,    N1, E,   N9, E)
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)

&mt {
    flavor = "tap-preferred";
    retro-tap;
};

&lt {
    retro-tap;
};

/ {
	chosen {
		zmk,split-serial = &uart0;
	};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp TAB     &kp SEMI   &kp COMMA  &kp DOT     &kp P       &kp Y   &kp F &kp G       &kp C       &kp R      &kp L      &kp BSPC
   &kp ESC     &mt LGUI A &mt LALT O &mt LCTRL E &mt LSHFT U &kp I   &kp D &mt RSHFT H &mt RCTRL T &mt RALT N &mt RGUI S &none
   &kp DEL     &kp SQT    &kp Q      &kp J       &kp K       &kp X   &kp B &kp M       &kp W       &kp V      &kp Z      &none
                                     &none        &lt 2 RET &mo 3 &none &lt 1 SPACE  &none
                        >;
                };

                num_layer {
                        bindings = <
   &none &none &kp N7 &kp N8 &kp N9 &kp N0   &none &none     &none     &none    &none    &none
   &none &none &kp N4 &kp N5 &kp N6 &none    &none &kp RSHFT &kp RCTRL &kp RALT &kp RGUI &none
   &none &none &kp N1 &kp N2 &kp N3 &none    &none &none     &none     &none    &none    &none
                      &none  &none  &none    &none &none     &none
                        >;
                };

                sym_layer {
                        bindings = <
   &none &kp PLUS   &kp LBKT  &kp LBRC   &kp LPAR  &kp EQUAL   &kp KP_MULTIPLY &kp RPAR  &kp RBRC  &kp RBKT  &kp EXCL   &kp GRAVE
   &none &kp LGUI   &kp LALT  &kp LCTRL  &kp LSHFT &none       &kp FSLH        &kp MINUS &kp AMPS  &kp QMARK &kp TILDE  &kp AT
   &none &de_ae     &de_oe    &euro_sign &de_ue    &de_eszett  &kp BSLH        &kp UNDER &kp PRCNT &kp CARET &kp DOLLAR &none
                              &none      &none     &none       &kp PIPE        &kp HASH  &none
                        >;
                };

                nav_layer {
                        bindings = <
   &none &none      &none     &none     &none     &none       &none           &none     &none     &none     &none      &none
   &none &kp LGUI   &kp LALT  &kp LCTRL &kp LSHFT &none       &kp CAPS        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &none
   &none &none      &none     &none    &none      &none       &none           &kp HOME  &kp PG_DN &kp PG_UP &kp END    &none
                              &none    &none      &none       &none        &kp HASH  &none
                        >;
                };
        };

};

/delete-node/ &uart0_default;

&pinctrl {
	uart0_default: uart0_default {
		group1 {
			pinmux = <UART0_TX_P12>;
		};
		group2 {
			pinmux = <UART0_RX_P1>;
			input-enable;
		};
	};
};

&uart0 {
	current-speed = <115200>;
	status = "okay";
};
